{"ast":null,"code":"var _jsxFileName = \"/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Header.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { api } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header({\n  buttonText\n}) {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [movies, setMovies] = useState(null);\n  useEffect(() => {\n    api.get('/films').then(response => {\n      setMovies(response.data);\n    });\n    console.log(movies);\n  }, []);\n\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"STUDIO GHIBLI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: movies.map(movie => {\n        /*#__PURE__*/\n        _jsxDEV(\"p\", {\n          children: movie.original_title_romanised\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"jGA8xLn430FjQMsQxHR5tBRvQIU=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Header.tsx"],"names":["React","useState","useEffect","api","Header","buttonText","count","setCount","movies","setMovies","get","then","response","data","console","log","handleClick","map","movie","original_title_romanised"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,OAApB;;AAcA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA2C;AAAA;;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAS,CAAT,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAkB,IAAlB,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACO,GAAJ,CAAQ,QAAR,EAAkBC,IAAlB,CAAuBC,QAAQ,IAAI;AAC/BH,MAAAA,SAAS,CAACG,QAAQ,CAACC,IAAV,CAAT;AACH,KAFD;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMQ,WAAW,GAAG,MAAM;AACtBT,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEU,WAAjB;AAAA,gBAA+BX;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBACIE,MAAM,CAACS,GAAP,CAAYC,KAAD,IAAW;AACtB;AAAA;AAAA,oBAAIA,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AACC,OAFD;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA3BuBf,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { api } from './api';\n\ninterface HeaderProps {\n    buttonText: string;\n}\n\ninterface Movies {\n    title: string;\n    original_title_romanised: string;\n    description: string;\n    date: string;\n    prevState: null\n}\n\nexport default function Header({buttonText}: HeaderProps) {\n    const [count, setCount] = useState<number>(0)\n    const [movies, setMovies] = useState<Movies[] | null>(null)\n\n    useEffect(() => {\n        api.get('/films').then(response => {\n            setMovies(response.data)\n        })\n        console.log(movies)\n    }, [])\n\n    const handleClick = () => {\n        setCount(count + 1)\n    }\n\n    return (\n        <div>\n            <h1>STUDIO GHIBLI</h1>\n            <button onClick={handleClick}>{buttonText}</button>\n            <p>{count}</p>\n            <section>{\n                movies.map((movie) => {\n                <p>{movie.original_title_romanised}</p>\n                })\n                }</section>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}