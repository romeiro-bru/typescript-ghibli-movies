{"ast":null,"code":"var _jsxFileName = \"/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Components/MoviesList/MoviesList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { api } from '../../api/api';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MoviesList() {\n  _s();\n\n  const [allMovies, setAllMovies] = useState([]);\n  useEffect(() => {\n    const req = async () => {\n      try {\n        const response = await api.get('/films');\n        setAllMovies(response.data);\n      } catch (e) {\n        const error = e;\n        console.log(error);\n      }\n    };\n\n    req();\n  }, []);\n\n  const handleSelectMovie = movie => {\n    console.log(movie);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"STUDIO GHIBLI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movies-list\",\n      children: allMovies.map((movie, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelectMovie(movie),\n        children: movie.title\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoviesList, \"9xwj/v1xCO9whhbmF+KgcaY+6R8=\");\n\n_c = MoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"sources":["/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Components/MoviesList/MoviesList.tsx"],"names":["useState","useEffect","api","MoviesList","allMovies","setAllMovies","req","response","get","data","e","error","console","log","handleSelectMovie","movie","map","i","title"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAO,aAAP;;AAWA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAc,EAAd,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,GAAG,GAAG,YAAY;AACpB,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAqB,QAArB,CAAvB;AACAH,QAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AACH,OAHD,CAGE,OAAOC,CAAP,EAAU;AACR,cAAMC,KAAK,GAAGD,CAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KARD;;AASAL,IAAAA,GAAG;AACN,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMQ,iBAAiB,GAAIC,KAAD,IAAsB;AAChDH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACC,GAFD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBACIX,SAAS,CAACY,GAAV,CAAc,CAACD,KAAD,EAAQE,CAAR,kBACd;AAAY,QAAA,OAAO,EAAE,MAAMH,iBAAiB,CAACC,KAAD,CAA5C;AAAA,kBAAsDA,KAAK,CAACG;AAA5D,SAASD,CAAT;AAAA;AAAA;AAAA;AAAA,cADA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhCed,U;;KAAAA,U","sourcesContent":["import { AxiosError } from 'axios';\nimport { useState, useEffect } from 'react';\nimport { api } from '../../api/api';\nimport './style.css';\n\ninterface AllMovies {\n    title: string;\n    original_title: string;\n    original_title_romanised: string;\n    description: string;\n    release_date: string;\n    id: string\n  }\n\nexport function MoviesList() {\n    const [allMovies, setAllMovies] = useState<AllMovies[]>([])\n\n    useEffect(() => {    \n        const req = async () => {\n            try {\n                const response = await api.get<AllMovies[]>('/films') \n                setAllMovies(response.data)\n            } catch (e) {\n                const error = e as AxiosError\n                console.log(error)\n            }\n        }\n        req()        \n    }, [])\n\n    const handleSelectMovie = (movie: AllMovies) => {\n    console.log(movie)\n    }\n \n\n    return (\n        <div>\n            <h1>STUDIO GHIBLI</h1>\n                <ul className=\"movies-list\">{\n                    allMovies.map((movie, i) => (\n                    <li key={i} onClick={() => handleSelectMovie(movie)}>{movie.title}</li>\n                       ))\n                    }        \n                </ul>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}