{"ast":null,"code":"var _jsxFileName = \"/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Components/MoviesList/MoviesList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { api } from '../../api/api';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MoviesList() {\n  _s();\n\n  const [allMovies, setAllMovies] = useState([]);\n  const [movieInfo, setMovieInfo] = useState([]);\n  useEffect(() => {\n    api.get('/films').then(response => {\n      setAllMovies(response.data);\n    });\n  }, []);\n\n  const handleSelectMovie = i => {\n    // setMovieInfo(allMovies[i])\n    console.log(allMovies);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"STUDIO GHIBLI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movies-list\",\n      children: allMovies.map((movie, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelectMovie(i),\n        children: movie.title\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoviesList, \"ExWv0webuOby+vJRTmdp61MyC68=\");\n\n_c = MoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"sources":["/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Components/MoviesList/MoviesList.tsx"],"names":["useState","useEffect","api","MoviesList","allMovies","setAllMovies","movieInfo","setMovieInfo","get","then","response","data","handleSelectMovie","i","console","log","map","movie","title"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAO,aAAP;;AAWA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAc,EAAd,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAc,EAAd,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACM,GAAJ,CAAQ,QAAR,EAAkBC,IAAlB,CAAuBC,QAAQ,IAAI;AAC/BL,MAAAA,YAAY,CAACK,QAAQ,CAACC,IAAV,CAAZ;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,iBAAiB,GAAIC,CAAD,IAAe;AACzC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACC,GAHD;;AAMA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGQ;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBACIA,SAAS,CAACY,GAAV,CAAc,CAACC,KAAD,EAAQJ,CAAR,kBACd;AAAY,QAAA,OAAO,EAAE,MAAMD,iBAAiB,CAACC,CAAD,CAA5C;AAAA,kBAAkDI,KAAK,CAACC;AAAxD,SAASL,CAAT;AAAA;AAAA;AAAA;AAAA,cADA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA/BeV,U;;KAAAA,U","sourcesContent":["import { useState, useEffect } from 'react';\nimport { api } from '../../api/api';\nimport './style.css';\n\ninterface AllMovies {\n    title: string;\n    original_title: string;\n    original_title_romanised: string;\n    description: string;\n    release_date: string;\n    id: string\n}\n\nexport function MoviesList() {\n    const [allMovies, setAllMovies] = useState<AllMovies[]>([])\n    const [movieInfo, setMovieInfo] = useState<AllMovies[]>([])\n\n    useEffect(() => {\n        api.get('/films').then(response => {\n            setAllMovies(response.data)\n        })\n    }, [])\n\n    const handleSelectMovie = (i: number) => {\n    // setMovieInfo(allMovies[i])\n    console.log(allMovies)\n    }\n \n\n    return (\n        <div>\n            <input type=\"search\"/>\n            <h1>STUDIO GHIBLI</h1>\n                <ul className=\"movies-list\">{\n                    allMovies.map((movie, i) => (\n                    <li key={i} onClick={() => handleSelectMovie(i)}>{movie.title}</li>\n                       ))\n                    }\n                    {/* <p>{movie.map((info) => (\n                        <p>{info.description}</p>\n                    ))}</p> */}\n                </ul>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}