[{"/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/index.tsx":"1","/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/App.tsx":"2","/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/api/api.ts":"3","/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Pages/MoviesList/MoviesList.tsx":"4","/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Pages/Movie/Movie.tsx":"5"},{"size":218,"mtime":1633104547999,"results":"6","hashOfConfig":"7"},{"size":509,"mtime":1633374063921,"results":"8","hashOfConfig":"7"},{"size":1897,"mtime":1633387842757,"results":"9","hashOfConfig":"7"},{"size":1023,"mtime":1633387857793,"results":"10","hashOfConfig":"7"},{"size":1125,"mtime":1633387995326,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1tpolko",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/index.tsx",[],["25","26"],"/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/App.tsx",[],"/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/api/api.ts",["27"],"import axios from 'axios';\nimport castlesky from '../assets/images/laputa.jpg';\nimport graveofireflies from '../assets/images/hotarunohaka.jpg';\nimport totoro from '../assets/images/totoro.jpg';\nimport kiki from '../assets/images/majo.jpg';\nimport yesterday from '../assets/images/omoide.jpg';\nimport porco from '../assets/images/porco.jpg';\nimport pompoko from '../assets/images/tanuki.jpg';\nimport whisperofheart from '../assets/images/mimi.jpg';\nimport mononoke from '../assets/images/mononoke.jpg';\nimport yamada from '../assets/images/yamada.jpg';\nimport chihiro from '../assets/images/chihiro.jpg';\nimport thecatreturns from '../assets/images/baron.jpg';\nimport howl from '../assets/images/howl.jpg';\nimport talesearthsea from '../assets/images/ged.jpg';\nimport ponyo from '../assets/images/ponyo.jpg';\nimport arriety from '../assets/images/karigurashi.jpg';\nimport uponpoppyhill from '../assets/images/kokurikozaka.jpg';\nimport windrises from '../assets/images/kazetachinu.jpg';\nimport kaguya from '../assets/images/kaguyahime.jpg';\nimport marnie from '../assets/images/marnie.jpg';\nimport redturtle from '../assets/images/red-turtle.jpg';\n\ntype ImagesProps = {\n    ghibliImages: string\n}\n\nexport const api = axios.create({\n    baseURL: \"https://ghibliapi.herokuapp.com/\"\n})\n\nexport const ghibliImages = {\n    \"Castle in the Sky\": castlesky,\n    \"Grave of the Fireflies\": graveofireflies,\n    \"My Neighbor Totoro\": totoro,\n    \"Kiki's Delivery Service\": kiki,\n    Yesterday: yesterday,\n    Porco: porco,\n    PomPoko: pompoko,\n    WhisperoftheHeart: whisperofheart,\n    Mononoke: mononoke,\n    Yamada: yamada,\n    SpiritedAway: chihiro,\n    TheCatReturns: thecatreturns,\n    Howl: howl,\n    TalesofEartsea: talesearthsea,\n    Ponyo: ponyo,\n    Arrietty: arriety,\n    UpOnPoppyHill: uponpoppyhill,\n    WindRises: windrises,\n    Kaguya: kaguya,\n    Marnie: marnie,\n    RedTurtle: redturtle,\n}\n","/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Pages/MoviesList/MoviesList.tsx",[],"/home/bruna/code/romeiro-bru/typescript-ghibli-movies/src/Pages/Movie/Movie.tsx",["28"],"import { AxiosError } from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { api } from '../../api/api';\nimport './style.css';\nimport { ghibliImages } from '../../api/api';\n\n\ntype MovieProps = {\n  title: string;\n  original_title: string;\n  original_title_romanised: string;\n  description: string;\n  release_date: string;\n  id: string;\n}\n\nexport const Movie = () => {\n  const [movie, setMovie] = useState<MovieProps>()\n  const params = useParams<{ id: string }>();\n\n  useEffect(() => {\n    const req = async () => {\n      try {\n        const response = await api.get(`/films/${params.id}`)\n        setMovie(response.data)\n      }\n      catch (e) {\n        const error = e as AxiosError\n        console.log(error)\n      }\n    }\n    req()\n  }, [params.id])\n\n  return (\n    <div className=\"movie-details\">\n      <h1>{movie?.title}</h1>\n      <h3>{movie?.original_title}</h3>\n      <h3>{movie?.original_title_romanised}</h3>\n      <p>Date: {movie?.release_date}</p>\n      <p>{movie?.description}</p>\n      <Link to=\"/\">\n        return\n      </Link>\n    </div>\n  )\n}",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":24,"column":6,"nodeType":"35","messageId":"36","endLine":24,"endColumn":17},{"ruleId":"33","severity":1,"message":"37","line":6,"column":10,"nodeType":"35","messageId":"36","endLine":6,"endColumn":22},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"@typescript-eslint/no-unused-vars","'ImagesProps' is defined but never used.","Identifier","unusedVar","'ghibliImages' is defined but never used.","no-global-assign","no-unsafe-negation"]